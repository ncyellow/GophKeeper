definitions:
  httpserver.Binary:
    properties:
      data:
        items:
          type: integer
        type: array
      id:
        type: string
      metainfo:
        type: string
    type: object
  httpserver.Card:
    properties:
      cvv:
        type: string
      date:
        type: string
      fio:
        description: Написание ФИО на карте может отличаться от реального
        type: string
      id:
        type: string
      metainfo:
        type: string
      number:
        type: string
    type: object
  httpserver.Login:
    properties:
      id:
        type: string
      login:
        type: string
      metainfo:
        type: string
      password:
        type: string
    type: object
  httpserver.Text:
    properties:
      content:
        type: string
      id:
        type: string
      metainfo:
        type: string
    type: object
info:
  contact:
    email: ncyellow@yandex.ru
  description: Сервис по хранения конфиденциальных данных
  title: GophKeeper API
  version: "1.0"
paths:
  /api/card:
    delete:
      description: Удаление выполняется по уникальной паре Ид пользователя + Ид карты.
      operationId: delCard
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Удаление карты
      tags:
      - Delete
    post:
      consumes:
      - application/json
      description: Регистрация выполняется по уникальной паре Ид пользователя + Ид
        карты.
      operationId: addCard
      parameters:
      - description: Card object
        in: body
        name: card_data
        required: true
        schema:
          $ref: '#/definitions/httpserver.Card'
      produces:
      - text/plain
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: invalid deserialization
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "500":
          description: read data problem
          schema:
            type: string
      summary: Регистрация новой карты
      tags:
      - Add
  /api/card/{id}:
    get:
      description: на вход rest url на выход json значение
      operationId: readCard
      parameters:
      - description: Card ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.Card'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Возвращает данные по карте пользователя
      tags:
      - Read
  /api/login:
    delete:
      description: Удаление выполняется по уникальной паре Ид пользователя + Ид карты.
      operationId: delLogin
      parameters:
      - description: Login ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Удаление логина
      tags:
      - Delete
    post:
      consumes:
      - application/json
      description: Регистрация выполняется по уникальной паре Ид пользователя + Ид
        карты.
      operationId: addLogin
      parameters:
      - description: Login object
        in: body
        name: login_data
        required: true
        schema:
          $ref: '#/definitions/httpserver.Login'
      produces:
      - text/plain
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: invalid deserialization
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "500":
          description: read data problem
          schema:
            type: string
      summary: Регистрация нового логина
      tags:
      - Add
  /api/login/{id}:
    get:
      description: на вход rest url на выход json значение
      operationId: readLogin
      parameters:
      - description: Login ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.Login'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Возвращает данные по логину пользователя
      tags:
      - Read
  /api/text:
    delete:
      description: Удаление выполняется по уникальной паре Ид пользователя + Ид карты.
      operationId: delBinary
      parameters:
      - description: Binary ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Удаление бинарных данных
      tags:
      - Delete
    post:
      consumes:
      - application/json
      description: Регистрация выполняется по уникальной паре Ид пользователя + Ид
        карты.
      operationId: addBinary
      parameters:
      - description: Binary object
        in: body
        name: binary_data
        required: true
        schema:
          $ref: '#/definitions/httpserver.Binary'
      produces:
      - text/plain
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: invalid deserialization
          schema:
            type: string
        "409":
          description: Conflict
          schema:
            type: string
        "500":
          description: read data problem
          schema:
            type: string
      summary: Регистрация нового набора бинарных данных
      tags:
      - Add
  /api/text/{id}:
    get:
      description: на вход rest url на выход json значение
      operationId: readBinary
      parameters:
      - description: Binary ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpserver.Binary'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Возвращает данные по логину пользователя
      tags:
      - Read
swagger: "2.0"
tags:
- description: '"Группа запросов на добавление новых данных"'
  name: Add
- description: '"Группа запросов на чтение данных"'
  name: Read
- description: '"Группа запросов на удаление данных"'
  name: Delete
